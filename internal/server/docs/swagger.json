{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Go Simple Startpage App",
        "title": "Go Simple Startpage API",
        "contact": {
            "name": "Sami Khan",
            "url": "https://github.com/eiladin/go-simple-startpage"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/eiladin/go-simple-startpage/blob/master/LICENSE"
        }
    },
    "paths": {
        "/api/appconfig": {
            "get": {
                "description": "get application configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppConfig"
                ],
                "summary": "Get AppConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Config"
                        }
                    }
                }
            }
        },
        "/api/healthz": {
            "get": {
                "description": "run healthcheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HealthCheck"
                ],
                "summary": "Get Health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Healthcheck"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/model.Healthcheck"
                        }
                    }
                }
            }
        },
        "/api/network": {
            "get": {
                "description": "get network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "Get Network",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "add or update network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "Add Network",
                "parameters": [
                    {
                        "description": "Add Network",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.NetworkID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/status/{id}": {
            "get": {
                "description": "get status given a site id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Get Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Site ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SiteStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Config": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "model.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "object"
                }
            }
        },
        "model.Healthcheck": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "$ref": "#/definitions/model.HealthcheckErrors"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.HealthcheckErrors": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                }
            }
        },
        "model.Link": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "model.Network": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Link"
                    }
                },
                "network": {
                    "type": "string"
                },
                "sites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Site"
                    }
                }
            }
        },
        "model.NetworkID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.Site": {
            "type": "object",
            "properties": {
                "friendlyName": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "isSupportedApp": {
                    "type": "boolean"
                },
                "isUp": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "model.SiteStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "isUp": {
                    "type": "boolean"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        }
    }
}